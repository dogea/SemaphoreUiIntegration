<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_89245_semaphore.SemaphoreUiUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Script Include containing all the functions needed to support the Semaphore UI integration</description>
        <name>SemaphoreUiUtils</name>
        <script><![CDATA[var SemaphoreUiUtils = Class.create();
SemaphoreUiUtils.prototype = {
    initialize: function() {
        this.uri = gs.getProperty('x_89245_semaphore.semaphore.ui.uri');
        this.auth = gs.getProperty('x_89245_semaphore.semaphore.ui.auth.login');
        this.pass = gs.getProperty('x_89245_semaphore.semaphore.ui.auth.password');
        this.mid = gs.getProperty('x_89245_semaphore.semaphore.ui.mid.server');
    },

    // This function triggers the login to the SemaphoreUI REST API and stores the session cookie for subsequent calls
    authPostLogin: function() {
        // Initialize variables for the REST API call
        var requestBody = {};
        var responseHeader;
        var responseBody;
        var status;
        var sm;
        // Set the request body
        requestBody.auth = this.auth;
        requestBody.password = this.pass;
        // Make the REST call to Semaphore UI API
        try {
            sm = new sn_ws.RESTMessageV2('pi.frox.semaphore.authentication', 'POST  /auth/login'); // Might throw exception if message doesn't exist or not visible due to scope.
            sm.setEndpoint(this.uri + 'auth/login');
            sm.setRequestBody(JSON.stringify(requestBody));
            sm.setMIDServer(this.mid);
            response = sm.executeAsync(); // Might throw exception if http connection timed out or some issue with sending request itself because of encryption/decryption of password.
            response.waitForResponse(60); // In seconds. Wait at most 60 seconds to get response from ECC Queue/Mid Server. Might throw exception timing out waiting for response in ECC queue.
            responseCookies = response.haveError() ? response.getErrorMessage() : response.getCookies();
            var cookie = responseCookies.toString().replace('[', '').replace('; Path=/]', '');
            responseBody = response.haveError() ? response.getErrorMessage() : response.getBody();
            status = response.getStatusCode();
        } catch (ex) {
            responseBody = ex.getMessage();
            status = '500';
        } finally {
            requestBody = sm ? sm.getRequestBody() : null;
        }
        return cookie;
    },

    type: 'SemaphoreUiUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>david.ogea</sys_created_by>
        <sys_created_on>2024-09-23 10:59:42</sys_created_on>
        <sys_id>e7d9e7f183b81a100effcaffeeaad360</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>SemaphoreUiUtils</sys_name>
        <sys_package display_value="Semaphore UI Integration" source="x_89245_semaphore">3ca01b3d83f41a100effcaffeeaad312</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Semaphore UI Integration">3ca01b3d83f41a100effcaffeeaad312</sys_scope>
        <sys_update_name>sys_script_include_e7d9e7f183b81a100effcaffeeaad360</sys_update_name>
        <sys_updated_by>david.ogea</sys_updated_by>
        <sys_updated_on>2024-09-23 11:59:51</sys_updated_on>
    </sys_script_include>
</record_update>
